using System.Collections.Generic;
using System.Linq;
using Kontur.GameStats.Models.Entities;
using Newtonsoft.Json;

namespace Kontur.GameStats.Models.Json
{
	public class ServerInfoJsonModel
	{
		public ServerInfoJsonModel()
		{
		}

		public ServerInfoJsonModel(ServerEntityModel entity)
		{
			Server = entity.Server;
			GameModes = JsonConvert.DeserializeObject<ICollection<string>>(entity.GameModes);
		}

		public string Server { get; set; }
		public ICollection<string> GameModes { get; set; } = new List<string>();


		#region autogenerated equality members

		protected bool Equals(ServerInfoJsonModel other)
		{
			return string.Equals(Server, other.Server) && GameModes.SequenceEqual(other.GameModes);
		}

		public override bool Equals(object obj)
		{
			if (ReferenceEquals(null, obj)) return false;
			if (ReferenceEquals(this, obj)) return true;
			if (obj.GetType() != this.GetType()) return false;
			return Equals((ServerInfoJsonModel) obj);
		}

		public override int GetHashCode()
		{
			unchecked
			{
				return ((Server != null ? Server.GetHashCode() : 0) * 397) ^
				       (GameModes != null ? GameModes.GetHashCode() : 0);
			}
		}

		#endregion
	}
}