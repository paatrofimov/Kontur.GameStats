using System;
using Kontur.GameStats.Models.Entities;

namespace Kontur.GameStats.Models.Json
{
	public class RecentMatchJsonModel
	{
		public RecentMatchJsonModel()
		{
		}

		public RecentMatchJsonModel(MatchEntityModel entity)
		{
			Server = entity.Endpoint;
			Timestamp = new DateTime(entity.TimestampTicks);
			Results = new MatchJsonModel(entity);
		}

		public string Server { get; set; }
		public DateTime Timestamp { get; set; }
		public MatchJsonModel Results { get; set; }

		#region autogenerated equality members

		protected bool Equals(RecentMatchJsonModel other)
		{
			return string.Equals(Server, other.Server) && Timestamp.Equals(other.Timestamp);
		}

		public override bool Equals(object obj)
		{
			if (ReferenceEquals(null, obj)) return false;
			if (ReferenceEquals(this, obj)) return true;
			if (obj.GetType() != this.GetType()) return false;
			return Equals((RecentMatchJsonModel) obj);
		}

		public override int GetHashCode()
		{
			unchecked
			{
				return ((Server != null ? Server.GetHashCode() : 0) * 397) ^ Timestamp.GetHashCode();
			}
		}

		#endregion
	}
}